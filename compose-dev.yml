version: '3.8'

services:
  app:
    # environment: 
        # - DJANGO_SETTINGS_MODULE=mlarchive.settings.settings_docker
    build:
      context: .
      dockerfile: docker/app.Dockerfile

    init: true

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:db

    depends_on:
        - db
        - es
        - rabbit

    ipc: host
    volumes:
        - app-data:/data
        - app-assets:/assets

  es:
    image: "elasticsearch:7.17.4"
    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)
    environment:
        - discovery.type=single-node
        - xpack.security.enabled=false
    volumes:
        - es-data:/usr/share/elasticsearch/data

  db:
    image: postgres:14.6
    restart: always
    environment:
      POSTGRES_DB: mailarch
      POSTGRES_USER: django
      POSTGRES_PASSWORD: franticmarble
      POSTGRES_HOST_AUTH_METHOD: trust
    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)
    volumes:
        - postgresdb-data:/var/lib/postgresql/data
        - app-assets:/assets

  rabbit:
    image: rabbitmq:3.12-alpine
    restart: always
    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  celery:
    build:
      context: .
      dockerfile: build/app/Dockerfile
    init: true
    environment:
      CELERY_APP: mlarchive.celeryapp:app
      CELERY_ROLE: worker
      CONTAINER_ROLE: celery
      UPDATE_REQUIREMENTS_FROM: requirements.txt
      DEV_MODE: "yes"
      BROKER_URL: amqp://guest:guest@rabbit:5672//
    # command:
    #   - '--loglevel=INFO'
    # depends on /data subdirectories
    depends_on:
        - app
    restart: unless-stopped
    stop_grace_period: 1m
    volumes:
        - app-data:/data
        - app-assets:/assets

  beat:
    build:
      context: .
      dockerfile: build/app/Dockerfile
    init: true
    environment:
      CELERY_APP: mlarchive.celeryapp:app
      CELERY_ROLE: beat
      CONTAINER_ROLE: beat
      UPDATE_REQUIREMENTS_FROM: requirements.txt
      DEV_MODE: "yes"
      BROKER_URL: amqp://guest:guest@rabbit:5672//
    command:
      - '--loglevel=INFO'
      - '--scheduler=django_celery_beat.schedulers:DatabaseScheduler'
    # depends on /data subdirectories
    depends_on:
        - app
    restart: unless-stopped
    stop_grace_period: 1m
    volumes:
        - app-data:/data
        - app-assets:/assets

volumes:
    app-assets:
    app-data:
    postgresdb-data:
    es-data: