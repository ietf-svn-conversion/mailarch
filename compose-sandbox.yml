version: '3.8'

services:
  app:
    environment: 
        - DJANGO_SETTINGS_MODULE=mlarchive.settings.settings_docker
    build:
      context: .
      dockerfile: docker/app-sandbox.Dockerfile
    ports:
      - 8005:8000

    init: true

    # use when not using ENTRYPOINT
    # command: sleep infinity

    # network_mode: service:db

    depends_on:
        - db
        - es
        - rabbit

    ipc: host
    volumes:
        - app-data:/data
        - app-assets:/assets

  es:
    image: "elasticsearch:7.17.4"
    environment:
        - discovery.type=single-node
        - xpack.security.enabled=false
    volumes:
        - es-data:/usr/share/elasticsearch/data
        
  db:
    image: postgres:14.6
    restart: always
    environment:
      POSTGRES_DB: mailarch
      POSTGRES_USER: django
      POSTGRES_PASSWORD: franticmarble
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
        - postgresdb-data:/var/lib/postgresql/data
        - app-assets:/assets
        
  rabbit:
    image: rabbitmq:3.12-alpine
    restart: always

  celery:
    build:
      context: .
      dockerfile: docker/celery.Dockerfile
    init: true
    environment:
      CELERY_APP: mlarchive.celeryapp:app
      CELERY_ROLE: worker
      UPDATE_REQUIREMENTS_FROM: requirements.txt
      DEV_MODE: "yes"
      BROKER_URL: amqp://guest:guest@rabbit:5672//
    command:
      - '--loglevel=INFO'
    # depends on /data subdirectories
    depends_on:
        - app
    restart: unless-stopped
    stop_grace_period: 1m
    volumes:
        - app-data:/data
        - app-assets:/assets

volumes:
    app-assets:
    app-data:
    postgresdb-data:
    es-data:
