=======================================
Email Archive Installation Instructions
=======================================

1. General Instructions for Deployment of a New Release
2. Simple Development Setup
3. Installing from scratch


1. General Instructions for Deployment of a New Release
====================================================

 1. Make a directory to hold the new release::
      sudo su - -s /bin/bash wwwrun
      mkdir /a/mailarch/${releasenumber}
      cd /a/mailarch/${releasenumber}

 2. Fetch the release tarball from github 
    (see https://github.com/ietf-tools/mailarch/releases)::

      wget https://github.com/ietf-tools/mailarch/releases/download/${releasenumber}/release.tar.gz
      tar xzvf release.tar.gz
  
 3. Copy ./.env from previous release::

      cp ../current/.env .

 4. Setup a new virtual environment and install requirements::

      python3.9 -m venv env
      source env/bin/activate
      pip install --upgrade setuptools
      pip install -r requirements.txt

 5. Move static files into place (/a/mailarch/current/backend/static):

      backend/manage.py collectstatic --noinput

 6. Stop the mail archive service
      (run in a different terminal window with access to sudo)
      sudo systemctl stop mailarchive.socket mailarchive.service

 7. Run migrations:  
      backend/manage.py migrate

      Take note if any migrations were executed.
 
 8. Back out one directory level, then re-point the 'current' symlink::

      cd ..
      rm ./current; ln -s ${releasenumber} current

 9. Start the mail archive service
      (run in a different terminal window with access to sudo)
      sudo systemctl start mailarchive.socket mailarchive.service

 10. Verify operation: 

      http://mailarchive.ietf.org/

 11. If install failed and there were no migrations at step 7,
    revert web symlink. If there were migrations at step 7, they will need to be reversed. If it's not obvious what to do to reverse the migrations, contact the dev team.


2. Simple development setup
===========================

Prerequisites
-------------
- Python 3.9
- Chromedriver *
- Docker & Docker Compose

* required for selenium tests
  https://sites.google.com/a/chromium.org/chromedriver/home


1. Download source from github:

    wget https://github.com/ietf-tools/mailarch/releases/download/${releasenumber}/release.tar.gz
    tar xzvf release.tar.gz

2. Setup .env configuration file

    cd trunk
    cp .env.sample .env
    
    - make changes as needed
    DEBUG=True
    SECRET_KEY=
    DATA_ROOT= (mkdir owner wwwrun:www)
    LOG_DIR= (mkdir owner wwwrun:www)
    DATABASES_NAME=db
    DATABASES_USER=root
    DATABASES_PASSWORD=[password]
    DOCKER_MYSQL_ROOT_PASSWORD=[same password] 
    ALLOWED_HOSTS= (add dev server)

    ** DO NOT USE THIS SETUP IN PRODUCTION

3. Setup Python virtual environment

    python3.9 -m venv env
    source env/bin/activate
    pip install -U setuptools
    pip install -r requirements.txt

4. Setup Containers

    docker-compose up -d

5. Run Tests 

    cd backend
    export PYTHONPATH=$PWD
    cd mlarchive
    pytest tests -v

6. Run Initial Migration

    cd ..
    ./manage.py migrate

7. Load messages
  
    1.7.1 Mbox file

        ./manage.py load [filename] -l [listname]

    1.7.2 Individual message

        mlarchive/bin/archive-mail.py [listname] < [message file]

8. Runserver

    ./manage.py runserver [HOST:PORT]



3. Installing from Scratch
==========================

Production Setup


EXTERNAL DEPENDENCIES
=====================
Python 3.9
MySQL 5.6
Elasticsearch 7.x
Memcached 1.4
RabbitMQ Server 3.8.11


Prerequisites
-------------
1. Install and configure Elasticsearch
zypper addrepo -f https://artifacts.elastic.co/packages/7.x/yum
zypper install elasticsearch
edit /etc/elasticsearch/elasticsearch.yml
  - set path.data and path.repo
systemctl daemon-reload
systemctl enable elasticsearch.service
systemctl start elasticsearch.service


2. Install and configure RabbitMQ
zypper install rabbitmq-server
zypper install rabbitmq-server-plugins
rabbitmq-plugins enable rabbitmq_management
systemctl enable rabbitmq-server
systemctl start rabbitmq-server
systemctl status rabbitmq-server

see: http://www.rabbitmq.com/man/rabbitmqctl.1.man.html


SETUP:
The following steps will refer to INSTALL_DIR (ie. /a/mailarch/ )

1. Complete General Instructions for Deployment of a New Release
   from above.

2. Sample Apache Configuration

        RemoveHandler cgi-script .py
        Alias /static/ /a/mailarch/current/backend/static/

        WSGIScriptAlias / /a/mailarch/current/backend/mlarchive/wsgi.py
        WSGIApplicationGroup %{GLOBAL}
        WSGIProcessGroup mailarchive.ietf.org

        <Directory /a/mailarch>
            #Order allow,deny
            #Allow from all
            Options FollowSymLinks
        </Directory>

        <Directory /a/mailarch/current/backend/static>
            Order allow,deny
            Allow from all
        </Directory>

        <Directory /a/mailarch/current/backend/mlarchive>
        <Files wsgi.py>
            Order deny,allow
            Allow from all
        </Files>
        </Directory>


3. Configure mailmain

copy INSTALL_DIR/current/backend/mlarchive/bin/call-archives.py /a/ietf/scripts

/a/mailman/Mailman/mm_cfg:
PUBLIC_EXTERNAL_ARCHIVER = '/a/ietf/scripts/call-archives.py %(listname)s --public'
PRIVATE_EXTERNAL_ARCHIVER = '/a/ietf/scripts/call-archives.py %(listname)s --private'

Modify ARCHIVE ALIASES in /a/postfix/aliases

ietfarch-atompub-archive:               "|/a/ietf/scripts/archive-mail atompub"

-> 

ietfarch-atompub-archive:               "|/a/ietf/scripts/call-archives atompub"


4. Install Cronscripts


5. Setup Celery service
Celery is provided in the Python virtual environment. What remains is to copy
systemd files into place and enable/start the service.
INSTALL_DIR=/a/mailarch

cp INSTALL_DIR/current/backend/celery/celeryd.service /usr/lib/systemd/system
cp INSTALL_DIR/current/backend/celery/celeryd /etc/default/
systemctl enable celeryd
systemctl start celeryd

-- Test Status --
systemctl status celeryd
INSTALL_DIR/current/env/bin/celery status

** NOTE ** Celery will fail to start unless 
/var/log/mail-archive/mlarchive.log exists and is writable

